class Solution {
public:
    int minimumMountainRemovals(vector<int>& nums) {
        int n = nums.size(),ans = 0;
        int left_dp[n],right_dp[n];
        for(int i = 0; i < n; i++) {
            left_dp[i] = 1;
            for(int j = 0; j < i; j++) {
                if(nums[j] < nums[i]) left_dp[i] = max(left_dp[i],left_dp[j]+1);
            }
            //ans = max(ans,left_dp[i]);
        }
        for(int i = n-1; i >= 0; i--) {
            right_dp[i] = 1;
            for(int j = n-1; j > i; j--) {
                if(nums[j] < nums[i]) right_dp[i] = max(right_dp[i],right_dp[j]+1);
            }
            //ans = max(ans,right_dp[i]);
        }

        for(int i = 0; i < n-1; i++) {
            if(left_dp[i] == 1) continue; 
            for(int j = i+1; j < n; j++) {
                if(nums[i] > nums[j]) ans = max(ans,left_dp[i] + right_dp[j]);
            }
        }
        return n-ans;
    }
};
