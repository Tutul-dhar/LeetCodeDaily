

/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    int level_val[100100];
    
    void dfs(TreeNode* root,int level) {
        level_val[level] += root->val;
        
        if(root->left != NULL) dfs(root->left,level+1);
        if(root->right != NULL) dfs(root->right,level+1);
    }

    void dfs1(TreeNode* root,int level,int q) {
        root->val = level_val[level] - q;
        int p = 0;
        if(root->left != NULL) p += root->left->val;
        if(root->right != NULL) p += root->right->val;
        if(root->left != NULL) dfs1(root->left,level+1,p);
        if(root->right != NULL) dfs1(root->right,level+1,p);
    }

    TreeNode* replaceValueInTree(TreeNode* root) {
        dfs(root,0);
        dfs1(root,0,root->val);
        return root;
    }
};
