/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<int> ans;
    int len = -1;
    void dfs(TreeNode* node,int p = 0) {
        if(!node) return;
        len = max(len,p);
        ans[p] = max(ans[p],node->val);
        dfs(node->left,p+1);
        dfs(node->right,p+1);
    }
    vector<int> largestValues(TreeNode* root) {
        ans.resize(10010);
        for(int i = 0; i < 10010; i++) ans[i] = -1<<31;
        vector<int> v;
        dfs(root);
        for(int i = 0; i <= len; i++) v.push_back(ans[i]);
        return v;
    }
};
