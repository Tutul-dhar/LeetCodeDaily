class Solution {
public:
    int minSubarray(vector<int>& nums, int p) {
        map<int,vector<int>> ma;
        int sum = 0;
        ma[0].push_back(nums.size());
        for(int i= nums.size() - 1; i >= 0; i--) {
            sum += nums[i];
            sum %= p;
            ma[sum].push_back(i);
        }
        sum = 0;
        int ans = nums.size();
        for(int i = 0; i < nums.size(); i++) {
            int e = (p - sum)%p;
            while(ma[e].size() and ma[e][ma[e].size()-1] < i) ma[e].pop_back();
            if(ma[e].size()) {
                e = ma[e][ma[e].size()-1] - i;
                ans = min(ans,e);
            }
            sum += nums[i];
            sum %= p; 
        }
        return ans == nums.size() ? -1 : ans;
    }
};
